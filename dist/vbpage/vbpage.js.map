{"version":3,"file":"vbpage.js","sources":["../../src/utils/RuntimeCache.ts","../../src/services/fetch.service.ts","../../src/blocks/vbpage/vbpage.ts"],"sourcesContent":["export class RuntimeCache {\n  private runtimeCache: Map<string, unknown> = new Map();\n\n  public get<T>(key: string): T | undefined {\n    return this.runtimeCache.get(key) as T | undefined;\n  }\n\n  public set<T>(key: string, value: T): void {\n    this.runtimeCache.set(key, value);\n  }\n\n  public has(key: string): boolean {\n    return this.runtimeCache.has(key);\n  }\n\n  public delete(key: string): void {\n    this.runtimeCache.delete(key);\n  }\n}\n","import { DebuggerService } from '@kluntje/services';\n\nimport { getUrlForEndpoint } from '../app/utils/getUrlForEndpoint';\nimport { RuntimeCache } from '../utils/RuntimeCache';\n\nexport interface FetchServiceCacheOptions {\n  cacheType?: 'runtime'; // 'local' | 'session' | \"request\" can be added later\n}\n\nexport interface FetchServiceOptions {\n  fetchOptions?: RequestInit;\n  cacheOptions?: FetchServiceCacheOptions;\n}\n\nclass FetchService {\n  private requestPipeline: Map<string, Promise<Response>> = new Map();\n\n  private runtimeCache = new RuntimeCache();\n\n  public fetchJsonExternal<T>(endpoint: string, options: FetchServiceOptions = {}): Promise<T> {\n    // eslint-disable-next-line @typescript-eslint/unbound-method -- `getResponseJSON` does not access `this`\n    return this.fetchData(endpoint, options, this.getResponseJSON<T>);\n  }\n\n  public fetchJson<T>(endpoint: string, options: FetchServiceOptions = {}): Promise<T> {\n    // eslint-disable-next-line @typescript-eslint/unbound-method -- `getResponseJSON` does not access `this`\n    return this.fetchData(getUrlForEndpoint(endpoint).href, options, this.getResponseJSON<T>);\n  }\n\n  public fetchTextExternal(endpoint: string, options: FetchServiceOptions = {}): Promise<string> {\n    // eslint-disable-next-line @typescript-eslint/unbound-method -- `getResponseText` does not access `this`\n    return this.fetchData(endpoint, options, this.getResponseText);\n  }\n\n  public fetchText(endpoint: string, options: FetchServiceOptions = {}): Promise<string> {\n    // eslint-disable-next-line @typescript-eslint/unbound-method -- `getResponseText` does not access `this`\n    return this.fetchData(getUrlForEndpoint(endpoint).href, options, this.getResponseText);\n  }\n\n  private async fetchData<T>(\n    url: string,\n    options: FetchServiceOptions,\n    dataMapper: (Response) => Promise<T>\n  ): Promise<T> {\n    const { cacheOptions } = options;\n    const cachedData = this.getCachedData<T>(url, cacheOptions);\n    if (cachedData !== null) return cachedData;\n\n    const pipelinedRequest = this.requestPipeline.get(url);\n    if (pipelinedRequest !== undefined) return dataMapper(await pipelinedRequest);\n\n    const request = fetch(url, options.fetchOptions);\n    this.requestPipeline.set(url, request);\n\n    const response = await request;\n    this.requestPipeline.delete(url);\n    const responseData = await dataMapper(response);\n\n    this.setCachedData(url, responseData, cacheOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n\n      DebuggerService.error(`FetchService: Error fetching data from ${url}: ${errorText}`);\n\n      throw new Error(`Error fetching data from ${url}: ${errorText}`);\n    }\n    return responseData;\n  }\n\n  private async getResponseJSON<T>(response: Response): Promise<T> {\n    const responseClone = response.clone();\n    const responseJson = (await responseClone.json()) as T;\n    return responseJson;\n  }\n\n  private async getResponseText(response: Response): Promise<string> {\n    const responseClone = response.clone();\n    const responseText = await responseClone.text();\n    return responseText;\n  }\n\n  private getCachedData<T>(url: string, cacheOptions?: FetchServiceCacheOptions): T | null {\n    if (cacheOptions?.cacheType === 'runtime') {\n      return this.runtimeCache.get(url) ?? null;\n    }\n    return null;\n  }\n\n  private setCachedData<T>(url: string, data: T, cacheOptions?: FetchServiceCacheOptions): void {\n    if (cacheOptions?.cacheType === 'runtime') {\n      this.runtimeCache.set(url, data);\n    }\n  }\n}\n\nexport default new FetchService();\n","import './vbpage.scss';\nimport { DebuggerService } from '@kluntje/services';\nimport FetchService from '../../services/fetch.service';\n\nexport interface VBPageResponse {\n  args: {\n    data: string;\n  };\n}\n\nexport default async function decorate(block: HTMLElement) {\n  // const url = `https://21199447-2ef4-4b02-874e-d3f6f3fbeb14.mock.pstmn.io/get`;\n  const url = `https://427829a5-f09b-44ae-a207-2e45c77525e2.mock.pstmn.io/get`;\n  let vbPageHTML: string = '';\n\n  try {\n    // const vbPageResponse = await FetchService.fetchJsonExternal<VBPageResponse>(url);\n    const vbPageResponse = await FetchService.fetchTextExternal(url);\n    // vbPageHTML = vbPageResponse.args.data;\n    vbPageHTML = vbPageResponse;\n  } catch (error) {\n    DebuggerService.error('VBPage: Error fetching vbPage data:', error);\n    vbPageHTML = '';\n  }\n\n  block.innerHTML = vbPageHTML;\n}\n"],"names":["RuntimeCache","key","value","FetchService","endpoint","options","getUrlForEndpoint","url","dataMapper","cacheOptions","cachedData","pipelinedRequest","request","response","responseData","errorText","DebuggerService","data","FetchService$1","decorate","block","vbPageHTML","error"],"mappings":"qLAAO,MAAMA,CAAa,CAAnB,aAAA,CACG,KAAA,iBAAyC,GAAI,CAE9C,IAAOC,EAA4B,CACjC,OAAA,KAAK,aAAa,IAAIA,CAAG,CAClC,CAEO,IAAOA,EAAaC,EAAgB,CACpC,KAAA,aAAa,IAAID,EAAKC,CAAK,CAClC,CAEO,IAAID,EAAsB,CACxB,OAAA,KAAK,aAAa,IAAIA,CAAG,CAClC,CAEO,OAAOA,EAAmB,CAC1B,KAAA,aAAa,OAAOA,CAAG,CAC9B,CACF,CCJA,MAAME,CAAa,CAAnB,aAAA,CACU,KAAA,oBAAsD,IAEtD,KAAA,aAAe,IAAIH,CAAa,CAEjC,kBAAqBI,EAAkBC,EAA+B,GAAgB,CAE3F,OAAO,KAAK,UAAUD,EAAUC,EAAS,KAAK,eAAkB,CAClE,CAEO,UAAaD,EAAkBC,EAA+B,GAAgB,CAE5E,OAAA,KAAK,UAAUC,EAAkBF,CAAQ,EAAE,KAAMC,EAAS,KAAK,eAAkB,CAC1F,CAEO,kBAAkBD,EAAkBC,EAA+B,GAAqB,CAE7F,OAAO,KAAK,UAAUD,EAAUC,EAAS,KAAK,eAAe,CAC/D,CAEO,UAAUD,EAAkBC,EAA+B,GAAqB,CAE9E,OAAA,KAAK,UAAUC,EAAkBF,CAAQ,EAAE,KAAMC,EAAS,KAAK,eAAe,CACvF,CAEA,MAAc,UACZE,EACAF,EACAG,EACY,CACN,KAAA,CAAE,aAAAC,CAAiB,EAAAJ,EACnBK,EAAa,KAAK,cAAiBH,EAAKE,CAAY,EAC1D,GAAIC,IAAe,KAAa,OAAAA,EAEhC,MAAMC,EAAmB,KAAK,gBAAgB,IAAIJ,CAAG,EACrD,GAAII,IAAqB,OAAkB,OAAAH,EAAW,MAAMG,CAAgB,EAE5E,MAAMC,EAAU,MAAML,EAAKF,EAAQ,YAAY,EAC1C,KAAA,gBAAgB,IAAIE,EAAKK,CAAO,EAErC,MAAMC,EAAW,MAAMD,EAClB,KAAA,gBAAgB,OAAOL,CAAG,EACzB,MAAAO,EAAe,MAAMN,EAAWK,CAAQ,EAI1C,GAFC,KAAA,cAAcN,EAAKO,EAAcL,CAAY,EAE9C,CAACI,EAAS,GAAI,CACV,MAAAE,EAAY,MAAMF,EAAS,OAEjCG,MAAAA,EAAgB,MAAM,0CAA0CT,CAAG,KAAKQ,CAAS,EAAE,EAE7E,IAAI,MAAM,4BAA4BR,CAAG,KAAKQ,CAAS,EAAE,CACjE,CACO,OAAAD,CACT,CAEA,MAAc,gBAAmBD,EAAgC,CAGxD,OADe,MADAA,EAAS,QACW,MAE5C,CAEA,MAAc,gBAAgBA,EAAqC,CAG1D,OADc,MADCA,EAAS,QACU,MAE3C,CAEQ,cAAiBN,EAAaE,EAAmD,CACnF,OAAAA,GAAA,YAAAA,EAAc,aAAc,UACvB,KAAK,aAAa,IAAIF,CAAG,GAAK,KAEhC,IACT,CAEQ,cAAiBA,EAAaU,EAASR,EAA+C,EACxFA,GAAA,YAAAA,EAAc,aAAc,WACzB,KAAA,aAAa,IAAIF,EAAKU,CAAI,CAEnC,CACF,CAEA,MAAeC,EAAA,IAAIf,ECtFnB,eAA8BgB,EAASC,EAAoB,CAEzD,MAAMb,EAAM,iEACZ,IAAIc,EAAqB,GAErB,GAAA,CAIWA,EAFU,MAAMlB,EAAa,kBAAkBI,CAAG,QAGxDe,EAAO,CACEN,EAAA,MAAM,sCAAuCM,CAAK,EACrDD,EAAA,EACf,CAEAD,EAAM,UAAYC,CACpB"}